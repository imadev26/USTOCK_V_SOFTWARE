<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAw5JREFUaEPt
        mctqFEEUhmclxEBMJF6W3hai7gR3rr2AgjcwZiEmXkBcCIKKKESTqKjgZaMLiaiouAjiA/gAvoLo2stL
        jN9fnB6qx5pxuqvLBKkfPrrOqe5z5p/pnumuaWVlZWVlZWVVVLvd3gRTMAN3E6Hap2CjtW1OFF0HH+A7
        PAU1u5II1X4GP2AR1trLiBOFxuEb3IOVlk4u9YIH8BVWW7q+KPIe7th4H8zBVQi9mzHsdA27RF5v4BsL
        64kCm0Gn0xAcgOM29c9ET30yP2GDpaqLg8/Ago3nXHIJRO+XMGVhdXHwDbhl4xmXXALRexauW1hdevGF
        gRRGqLkf5uEa3IQRmyqJfOd11JJfIKpQQNTbChcsVDwGsxaWpN7CwuryC0QVCoh6F2HUQqdePZSP6u8X
        iCoUEPUmYIeFTsS3bViSekf19wtEFQqIeivgMWyDYTgHB23aiXiXbdMbIb8bzkPwQu0njpGZSdBptt3S
        HZG7bNu0RsidBN3g6TbmOcTfSgRE3XRGiM/CUQsVj8ACrLdUtKh1ybZpjDDWL37HRCFyjZqhTqd3Ma4l
        v4C3PQ1/mCjE3EBmmF8FurvVD2GwHvk0FztMwxE32Ufso28hPVMEzZDXNfUI3GMB20Mw7SY9kUti5CP8
        1UQh9pUZPYSVzBDLhL52hy3lRHwYSmaI/TexMSOvXLKCOGYUZGbM4jXwBEomCpEvmWGcxEitQhynT0Yv
        Xj98Ot2CJgoxr9Ns0sbLx4jEsTLzCbZYqq/Y7wQcg+VlROJ4mdG1MW6pvmI/nWaLNl4+RiRqyIy+rQY1
        465L9RYuWUd+gahCnqijZ/CBzPi9i3EtcXCSR11qDWSm6Mk2+lFXtyIvbDzvkg2JejLzEHqaYc49n7CN
        XnzQcpBW/LQcpDWtCZtqRNTraYacbu/32j5xy0ESBboX6ELrtTHIyOeunNhjPe9D3AKdRBF/yXTI0slF
        L30Suqn8As0851CoWMTWR/wWut+9pnkHv+A1uNubRkXR4m+F0Nptk6T5WyErKysrK+v/Vqv1G3c0AO+V
        8mDjAAAAAElFTkSuQmCC
</value>
  </data>
</root>